<%- model_class = Address -%>
<div class="page-header">
  <h1><%= "#{@user.company_name} " %><span><%= link_to "(#{@user.company_url})", @user.company_url, :target => "_blank" %></span></h1>
</div>
            
<div class="map-region">
  
  <div class="tabbable">
    <ul class="nav nav-tabs">
      <li class="active"><%= link_to "Address", "#mapTab1", "data-toggle" => 'tab', :onclick => "initialize(); return true;" %></li>
      <li class=""><%#= link_to "Enlarge", "#"  %></li>
      <li class=""><%= link_to "Directions", "#mapTab2", "data-toggle" => 'tab' %></li>
      <li class=""><%= link_to "Nearby Landmarks", "#mapTab3", "data-toggle" => 'tab' %></li>
    
    </ul>
         
    <div class="tab-content" style="width: 25%; height: 100%; margin: 0 5px; float:right;">
         
        <div class="tab-pane active" id="mapTab1">
          <h4>Address</h4>
          <dl class="dl-vertical">
            <dd><%= @address.street_address %></dd>
            <dd><%= @address.street_address_two %>, </dd>
            <dd><%= @address.city %>, <%= @address.state %></dd>
            <dd><%= @address.country %> - <%= @address.zipcode %></dd>
          </dl>
        </div>
      
        <div class="tab-pane" id="mapTab2">
          <h4>Directions</h4>
          <div id="search_location">
            <input name="start" id="start" placeholder="Where are you coming from?" type="text">
            <%#= link_to "Search", "#", :class => "btn btn-primary", :onclick => "calcRoute(); return false;"%>
          </div>
          <div id="directionsPanel" style="overflow-y: scroll; height: 400px; margin-top: 10px;"></div>
        </div>
        
        <div class="tab-pane" id="mapTab3">
          <h4>Landmarks</h4>
        </div>
        
    </div>
    
    <div id="map_canvas" style="width:70%; height:500px; float:left; background-color: #fff;" class="well"></div>
    
    
    <div style="clear:both;"></div>
  </div>
</div>

<div class="form-actions">
  <%= link_to t('.back', :default => t("helpers.links.back")),
              addresses_path, :class => 'btn'  %>
  
  <%# if can? :update, @address %>
  <%#= link_to t('.edit', :default => t("helpers.links.edit")),
              edit_address_path(@address), :class => 'btn' %>
  <%# end %>
  
  <% if can? :destroy, @address %>
  <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
              address_path(@address),
              :method => 'delete',
              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
              :class => 'btn btn-danger' %>
  <% end %>
</div>



<script type="text/javascript">
   var directionsDisplay;
   var map; 
   var directionsService;
   var stepDisplay;
</script>
   
<script type="text/javascript">

  function initialize() {
    
    var icon = "http://25.media.tumblr.com/avatar_f041527b49a3_16.png";
    var myLatlng = new google.maps.LatLng(<%= @address.latitude %>, <%= @address.longitude %>) ;
    var mapOptions = {
      center: myLatlng,
      zoom: 14,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    
    
    var map = new google.maps.Map(document.getElementById("map_canvas"),
        mapOptions);
        
    var marker = new google.maps.Marker({
      position: myLatlng,
      title:"My Location",
      //icon: icon,
      draggable:true,
      animation: google.maps.Animation.DROP,
    });
    
    var rendererOptions = {
      draggable: true
    };
    directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);

    google.maps.event.addListener(marker, 'dragend', function() {
        latLong = marker.getPosition();
        $.ajax({
                  type: "POST",
                  url: '/addresses/' +  <%= @address.id %> + ".json",
                  data: { _method:'PUT', address : {latitude: latLong.lat(), longitude: latLong.lng()} },
                  dataType: 'json'
        });
        
      });
    // To add the marker to the map, call setMap();
    marker.setMap(map);
    directionsDisplay.setMap(map);
    directionsDisplay.setPanel(document.getElementById("directionsPanel"));
    
    var defaultBounds = new google.maps.LatLngBounds(myLatlng);

    var input = document.getElementById('start');
    var options = {
      bounds: defaultBounds,
      types: ['establishment']
    };

    autocomplete = new google.maps.places.Autocomplete(input, options);
    autocomplete.bindTo('bounds', map);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        // Inform the user that a place was not found and return.
        return;
      }
      calcRoute();
    });
  }

  function loadScript() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "http://maps.googleapis.com/maps/api/js?key=AIzaSyAiWC6EU28mQk9du90WHXUQTSTaE48FlFw&libraries=places&sensor=false&callback=initialize";
    document.body.appendChild(script);
  }
  

  window.onload = loadScript;  
</script>


<script type="text/javascript">

  function calcRoute() {
    var directionsService = new google.maps.DirectionsService();
    
    var start = document.getElementById("start").value;
    var end = new google.maps.LatLng(<%= @address.latitude %>, <%= @address.longitude %>);
    var request = {
      origin:start,
      destination:end,
      travelMode: google.maps.TravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      }
    });
  }
</script>
